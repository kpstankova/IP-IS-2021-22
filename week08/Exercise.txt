ВАРИАНТ 1 - ЧЕТНИ
Задача 1: - 0.75т
Да се напише функция, която приема като аргумент цяло число и още едно цяло число,
което е едноцифрено. Функцията връща отново цяло число, получено по следния начин -
към всяка цифра от първото число се прибавя даденото едноцифрено число. И позицията
след събирането получим двуцифрено число, то определяме коя цифра да запишем на
съответната позиция по следния начин: ако сумата е 10, записваме 0, ако сумата е 11,
записваме 1 и т.н.
Пример: f(12975,4) 56319

Задача 2: - 2т
Yahtzee
Пенчо научил за нова игра със зарчета Yahtzee, в която силно влияние има късметът.
Изиграл 1-2 игри и решил да напише такава игра.
Но преди да започне разбрал, че компютърът му се е развалил и не може да започне.
Затова моли вас да му помогнете. Тъй като няма много време
преди да покаже играта на приятелите си, той иска само част от нея като за начало.
Ето и правилата, които иска Пенчо:
Хвърлят се 5 нормални зарчета. Числата от зарчетата (произволно генерирани) се
записват в масив от положителни елементи. Това, което иска Пенчо е функция,
която казва на кое хвърляне ще е постигнато следното: поне при едно хвърляне на 5-те
зарчета да е имало 3 зарчета, които показват еднаква стойност, и това да се е случило
за всички възможни стойности на зарчетата (от 1 до 6).
Инструкции за произволното генериране:
Включете библиотеките <stdio.h>, <stdlib.h> и <time.h>.
Инициализирайте произволния (random) генератор като напишете
srand (time(NULL)); във функцията, в която ще го използвате.
Генериране на число: ако напишете int number = rand();, то на number ще се присвои
произволна стойност между 0 и 32767.
Съответно при rand() % 10 + 1 ще се върне стойност между 1 и 10.
Пример: Направили сме 7 хвърляния (12345, 11122, 66666, 13335, 44564, 53545, 12223).
Виждаме, че във всяка комбинация от стойностите на заровете, освен в първата, имаме
по една стойност, която се повтаря поне по 3 пъти. Освен това се е случило за всяка
възможна стойност на зарчетата.
Това означава, че са ни били необходими 7 хвърляния преди да съберем всички комбинации.

Задача 3: - 1,25т
От стандартния вход се въвежда число n (брой елементи в масив), елементите на масив
и число k. Да се напише функция, която по даден масив от цели числа( и неговият размер)
и цяло число k, премахва от масива всички срещания на даденото число. Функцията
трябва да изведе на стандартния изход променения масив.
Пример:
вход:
5
3 4 5 23 4
4
изход: 3 5 23

ВАРИАНТ 2 - НЕЧЕТНИ
Задача 1: 0,75т
Да се напише функция, която приема като аргумент цяло число и още едно цяло число,
което е едноцифрено. Функцията връща отново цяло число, получено по следния начин -
всяка цифра от първото число се умножава даденото едноцифрено число. И позицията
след умножението получим двуцифрено число, то определяме коя цифра да запишем на
съответната позиция по следния начин: ако сумата е 10, записваме 1, ако сумата е 23,
записваме 2 и т.н.
Пример: f(12975,4) -> 48322

Задача 2: 2т
Yahtzee
Пенчо научил за нова игра със зарчета Yahtzee, в която силно влияния има късметът.
Изиграл 1-2 игри и решил да напише такава игра.
Но преди да започне разбрал, че компютърът му се е развалил и не може да започне.
Затова моли вас да му помогнете. Тъй като няма много време
преди да покаже играта на приятелите си, той иска само част от нея като за начало.
Ето и правилата, които иска Пенчо:
Хвърлят се 5 нормални зарчета. Числата от зарчетата (произволно генерирани) се
записват в масив от положителни елементи. Това, което иска Пенчо е функция,
която казва колко хвърляния ще са му нужни, така че последните 3 хвърляния да
съдържат поне 3 еднакви числа.
Инструкции за произволното генериране:
Включете библиотеките <stdio.h>, <stdlib.h> и <time.h>.
Инициализирайте произволния (random) генератор като напишете
srand (time(NULL)); във функцията, в която ще го използвате.
Генериране на число: ако напишете int number = rand();, то на number ще се присвои
произволна стойност между 0 и 32767.
Съответно при rand() % 10 + 1 ще се върне стойност между 1 и 10.
Пример: Направили сме 8 хвърляния (11212, 33321, 12312, 12354, 12231, 11122, 22432,
22222). Виждаме, че имаме 2 последователни хвърляния с поне 3 еднакви цифри (първите
две хвърляния - 11212 и 33321), но нямаме трето такова така че продължаваме да
хвърляме. Последните три хвърляния са 11122, 22432 и 22222 имат поне по 3 еднакви
цифри и спираме хвърлянето. Тоест сме направили 8 хвърляния.

Задача 3: 1,25т
Въвежда се число N (N <= 1000) и N цели числа (елементи на масив). Да се отпечатат броя
на инверсиите в масива.
Инверсия ще наричаме двойка индекси (i,j), където i < j и arr[i] > arr[j]
Вход: 6 5 4 3 2 1 0 Изход: 15 //в масива [5 4 3 2 1 0] има 15 инверсии.
Вход: 5 11 12 13 14 15, Изход: 0